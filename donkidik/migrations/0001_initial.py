# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-16 08:58
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import donkidik.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment_type', models.IntegerField(choices=[(1, b'On Post'), (2, b'On Comment')], default=1)),
                ('object_id', models.IntegerField(db_index=True)),
                ('text', models.TextField()),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'comment',
            },
            bases=(models.Model, donkidik.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Forecast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('post_type', models.IntegerField(choices=[(1, b'General'), (2, b'Report')], db_index=True, default=1)),
                ('text', models.TextField()),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
                ('last_action_ts', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'post',
            },
            bases=(models.Model, donkidik.models.BaseModel),
        ),
        migrations.CreateModel(
            name='PostDownVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'post_downvotes',
            },
        ),
        migrations.CreateModel(
            name='PostUpVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
            ],
            options={
                'db_table': 'post_upvotes',
            },
        ),
        migrations.CreateModel(
            name='ScoreEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
                ('downvote_event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='donkidik.PostDownVote')),
            ],
            options={
                'db_table': 'score_event',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_ts', models.DateTimeField(default=datetime.datetime.now)),
                ('end_ts', models.DateTimeField(default=donkidik.models.get_end_ts)),
                ('session_type', models.IntegerField(choices=[(1, b'BigKites'), (2, b'Regular'), (3, b'SmallKites')], default=2)),
                ('active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'session',
            },
            bases=(models.Model, donkidik.models.BaseModel),
        ),
        migrations.CreateModel(
            name='Spot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('latitude', models.CharField(max_length=128)),
                ('longitude', models.CharField(max_length=128)),
            ],
            options={
                'db_table': 'spot',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('pic', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='PostMeta',
            fields=[
                ('post', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='meta', serialize=False, to='donkidik.Post')),
                ('knots', models.IntegerField(blank=True, null=True)),
                ('gust', models.IntegerField(blank=True, null=True)),
                ('spot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='posts_metas', to='donkidik.Spot')),
            ],
            options={
                'db_table': 'post_meta',
            },
        ),
        migrations.AddField(
            model_name='session',
            name='closed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='closed_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='intended_users',
            field=models.ManyToManyField(blank=True, related_name='intented_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='own_sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='session',
            name='spot',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='donkidik.Spot'),
        ),
        migrations.AddField(
            model_name='session',
            name='users',
            field=models.ManyToManyField(blank=True, related_name='sessions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scoreevent',
            name='post_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='donkidik.Post'),
        ),
        migrations.AddField(
            model_name='scoreevent',
            name='scored_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_events', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='scoreevent',
            name='upvote_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='donkidik.PostUpVote'),
        ),
        migrations.AddField(
            model_name='postupvote',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='donkidik.Post'),
        ),
        migrations.AddField(
            model_name='postupvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postdownvote',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='donkidik.Post'),
        ),
        migrations.AddField(
            model_name='postdownvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='downvotes',
            field=models.ManyToManyField(blank=True, related_name='downvoted_posts', through='donkidik.PostDownVote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='related_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='related_posts', to='donkidik.Session'),
        ),
        migrations.AddField(
            model_name='post',
            name='upvotes',
            field=models.ManyToManyField(blank=True, related_name='upvoted_posts', through='donkidik.PostUpVote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='post',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='donkidik.Post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
    ]
